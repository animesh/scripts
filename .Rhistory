# Chunk 1: data
inpF<-"L:/promec/Animesh/MK/proteinGroups.txt"
data<-read.table(inpF,header=T,sep="\t",row.names = 1)
summary(data)
# Chunk 2: label
inpL<-"L:/promec/Animesh/MK/Class.txt"
label<-read.table(inpL,header=T,row.names=1,sep="\t", colClasses=c(rep("factor",3)))
#colnames(label)=sub("\\-[0-9]+","",colnames(label))
#colnames(label)
summary(label)
# Chunk 3: select
yyt=as.matrix(data[,201:230])
yyt[is.na(yyt)]<-0
yyt<-log2(yyt)
yyt[is.infinite(yyt)]<-0
#yyt<-yyt[,-(which(colSums(yyt) == 0))]
yyt<-yyt[-(which(rowSums(yyt) == 0)),]
summary(yyt)
colnames(yyt)<-sub("LFQ.intensity.","",colnames(yyt))
colnames(yyt)
yyt<-yyt[,rownames(label)]
colnames(yyt)
#yyt[,9]=as.factor(yyt[,9])
# Chunk 4: heatmap
#install.packages('pheatmap')
library(pheatmap)
#?pheatmap
y<-as.matrix(yyt)
summary(y)
svgPHC<-pheatmap(y,scale="row",clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",fontsize_row=6,annotation_col = label,show_rownames=F)
#ggsave(file=paste0(inpF,"corrcoefED.svg"), plot=svgPHC, width=6, height=6)
plot(svgPHC)
# Chunk 5: scale
#install.packages('quantable')
library(quantable)
y=robustscale(y)
y$data[is.na(y$data)]<-0
#names(y$data)=sub("X","",names(y$data))
pheatmap(y$data,scale="row",clustering_distance_rows = "manhattan",clustering_distance_cols = "manhattan",fontsize_row=6,annotation_col = label,show_rownames=F)
# Chunk 6: PCA
library(ggfortify)
#log.yyt=log(yyt[,1:8]+1)
#yyt.pca=prcomp(log.yyt,center=TRUE,scale.=TRUE)
yyt.pca=prcomp(t(yyt),center=TRUE,scale.=TRUE)
autoplot(yyt.pca,data=t(yyt),colour=as.numeric(label$Location))
autoplot(yyt.pca,data=t(yyt),colour=as.numeric(label$Treatment))
#biplot(yyt.pca)
# Chunk 7: clean
decoyPrefix="REV__"
dfNoRev<-data[-grep(decoyPrefix, rownames(data)),]
dataClean = data[!data$Reverse=="+",]
setdiff(rownames(dataClean),rownames(dfNoRev))
setdiff(rownames(dfNoRev),rownames(dataClean))
summary(dataClean)
# Chunk 8: norm
hdr="LFQ.intensity."
dataNorm=log2(dataClean[,grep(hdr, names(dataClean))])
summary(dataNorm)
hist(as.matrix(dataNorm))
# Chunk 9: select
dataNormFilter<-dataNorm
dataNormFilter[dataNormFilter==-Inf]=NA
colnames(dataNormFilter)<-sub(hdr,"",colnames(dataNormFilter))
summary(dataNormFilter)
selThr<-4
dataNormFilter$INRTI = apply(dataNormFilter,1,function(x) sum(is.na(x[1:5])))
dataNormFilter$IRTI = apply(dataNormFilter,1,function(x) sum(is.na(x[6:10])))
dataNormFilter$HCTI = apply(dataNormFilter,1,function(x) sum(is.na(x[11:15])))
dataNormFilter$INRSI = apply(dataNormFilter,1,function(x) sum(is.na(x[16:20])))
dataNormFilter$IRSI = apply(dataNormFilter,1,function(x) sum(is.na(x[21:25])))
dataNormFilter$HCSI = apply(dataNormFilter,1,function(x) sum(is.na(x[26:30])))
dataNormFilter.SelectINRTIIR = dataNormFilter[(dataNormFilter$INRTI < selThr & dataNormFilter$IRTI  < selThr )|(dataNormFilter$IRTI < selThr & dataNormFilter$INRTI  < selThr ),1:10]
summary(dataNormFilter.SelectINRTIIR)
dataNormFilter.SelectINRTIIR
write.csv(dataNormFilter.SelectINRTIIR,file=paste0(inpF,hdr,selThr,"dataNormFilter.INRIR.TI.csv"))
dataNormFilter.SelectINRTIHC = dataNormFilter[(dataNormFilter$INRTI < selThr & dataNormFilter$HCTI  < selThr )|(dataNormFilter$HCTI < selThr & dataNormFilter$INRTI  < selThr ),c(1:5,11:15)]
summary(dataNormFilter.SelectINRTIHC)
dataNormFilter.SelectINRTIHC
write.csv(dataNormFilter.SelectINRTIHC,file=paste0(inpF,hdr,selThr,"dataNormFilter.INRHC.TI.csv"))
dataNormFilter.SelectIRTIHC = dataNormFilter[(dataNormFilter$IRTI < selThr & dataNormFilter$HCTI  < selThr )|(dataNormFilter$HCTI < selThr & dataNormFilter$IRTI  < selThr ),6:15]
summary(dataNormFilter.SelectIRTIHC)
dataNormFilter.SelectIRTIHC
write.csv(dataNormFilter.SelectIRTIHC,file=paste0(inpF,hdr,selThr,"dataNormFilter.IRHC.TI.csv"))
dataNormFilter.SelectINRSIIR = dataNormFilter[(dataNormFilter$INRSI < selThr & dataNormFilter$IRSI  < selThr )|(dataNormFilter$IRSI < selThr & dataNormFilter$INRSI  < selThr ),16:25]
summary(dataNormFilter.SelectINRSIIR)
dataNormFilter.SelectINRSIIR
write.csv(dataNormFilter.SelectINRSIIR,file=paste0(inpF,hdr,selThr,"dataNormFilter.INRIR.SI.csv"))
dataNormFilter.SelectINRSIHC = dataNormFilter[(dataNormFilter$INRSI < selThr & dataNormFilter$HCSI  < selThr )|(dataNormFilter$HCSI < selThr & dataNormFilter$INRSI  < selThr ),c(16:20,26:30)]
summary(dataNormFilter.SelectINRSIHC)
dataNormFilter.SelectINRSIHC
write.csv(dataNormFilter.SelectINRSIHC,file=paste0(inpF,hdr,selThr,"dataNormFilter.INRHC.SI.csv"))
dataNormFilter.SelectIRSIHC = dataNormFilter[(dataNormFilter$IRSI < selThr & dataNormFilter$HCSI  < selThr )|(dataNormFilter$HCSI < selThr & dataNormFilter$IRSI  < selThr ),21:30]
summary(dataNormFilter.SelectIRSIHC)
dataNormFilter.SelectIRSIHC
write.csv(dataNormFilter.SelectIRSIHC,file=paste0(inpF,hdr,selThr,"dataNormFilter.IRHC.SI.csv"))
# Chunk 10: ROTS-dataNormFilter.SelectIRSIHC
#BiocManager::install("ROTS")#, version = "3.8")
dataNormImpCom<-dataNormFilter.SelectIRSIHC#[is.na(dataNormImpCom)]=5
summary(dataNormImpCom)
factors<-c(1,1,1,1,1,2,2,2,2,2)
library(ROTS)
results = ROTS(data = dataNormImpCom, groups = factors , B = 250 , K = 250 , seed = 42)
write.csv(summary(results, fdr = 1),file=paste0(inpF,hdr,selThr,"dataNormFilter.SelectIRSIHC.rots.csv"))
names(results)
summary(results, fdr = 0.05)
plot(results, fdr = 0.2, type = "pca")
plot(results, type = "volcano",fdr = 0.05)
plot(results, fdr = 0.2, type = "heatmap")#,na.rm=T)#,col=rainbow(4))
# Chunk 11: ROTS-dataNormFilter.SelectINRSIHC
#BiocManager::install("ROTS")#, version = "3.8")
dataNormImpCom<-dataNormFilter.SelectINRSIHC#[is.na(dataNormImpCom)]=5
summary(dataNormImpCom)
factors<-c(1,1,1,1,1,2,2,2,2,2)
library(ROTS)
results = ROTS(data = dataNormImpCom, groups = factors , B = 250 , K = 250 , seed = 42)
