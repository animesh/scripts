summary(iris)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(yyt)
yyt[,67]=floor(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
summary(yyt)
yyt[,67]=as.integer(yyt[,67]-1)
summary(iris)
summary(yyt)
summary(iris)
yyt[,67]=as.number(yyt[,67]-1)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
summary(iris)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
ind
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,5]
yyt.training=yyt[ind==1,1:66]
yyt[,67]=as.numeric(yyt[,67]-1)
yyt<-t(yy)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(4),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=1000,batch_size=5,validation_split=0.2)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=1000,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
table(yyt.testtarget,predicted.classes)
plot(history)
summary(model)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=33,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.90,0.10))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=33,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.90,0.10))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=8,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.90,0.10))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=33,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.70,0.30))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=33,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(iris)
summary(yyt)
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=33,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
summary(yyt)
plot(yyt$V67)
summary(yyt)
plot(yyt$V67)
plot(yyt[,67])
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(yyt)
plot(yyt[,67])
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=33,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
plot(yyt[,67])
fileP<-"/home/animeshs/Downloads/"
fileN<-"Sel66.txt"
lym<-read.table(paste0(fileP, fileN),row.names = 1, header=T)
fileC<-"Code.txt"
code<-read.table(paste0(fileP, fileC),row.names = 1, header=T)
summary(lym)
library(quantable)
y<-lym
y=robustscale(y)
y$data[is.na(y$data)]<-0
names(y$data)=sub("X","",names(y$data))
colnames(y$data)
yy<-rbind(y$data,code$Code)
yyt<-t(yy)
summary(yyt)
yyt[,67]=as.numeric(yyt[,67]-1)
summary(yyt)
plot(yyt[,67])
yyt=as.matrix(yyt)
dimnames(yyt)=NULL
library(keras)
#install_keras()
use_session_with_seed(3)
set.seed(2)
ind=sample(2,nrow(yyt),replace=TRUE,prob=c(0.80,0.20))
yyt.training=yyt[ind==1,1:66]
yyt.test=yyt[ind==2,1:66]
yyt.trainingtarget=yyt[ind==1,67]
yyt.testtarget=yyt[ind==2,67]
yyt.trainLabels=to_categorical(yyt.trainingtarget)
yyt.testLabels=to_categorical(yyt.testtarget)
model=keras_model_sequential()
model %>%
layer_dense(input_shape=c(66),units=33,activation='relu',kernel_initializer="glorot_normal",use_bias=TRUE) %>%
layer_dense(units=3,activation='softmax',kernel_initializer="glorot_normal",use_bias=TRUE)
summary(model)
model %>% compile(loss='categorical_crossentropy',optimizer='adam',metrics='accuracy')
history=model %>% fit(yyt.training,yyt.trainLabels,epochs=100,batch_size=5,validation_split=0.2)
plot(history)
predicted.classes=model %>% predict_classes(yyt.test)
table(yyt.testtarget,predicted.classes)
library("rpart")
library("rpart.plot")
library("randomForest")
#install.packages("rpart")
#install.packages("rpart.plot")
#install.packages("randomForest")
library("rpart")
library("rpart.plot")
library("randomForest")
data(iris)
data(iris)
data(iris)
set.seed(2)
ind=sample(2,nrow(iris),replace=TRUE,prob=c(0.80,0.20))
iris.training=iris[ind==1,]
iris.test=iris[ind==2,]
#install.packages("rpart")
#install.packages("rpart.plot")
#install.packages("randomForest")
library("rpart")
library("rpart.plot")
library("randomForest")
data(iris)
set.seed(2)
ind=sample(2,nrow(iris),replace=TRUE,prob=c(0.80,0.20))
iris.training=iris[ind==1,]
iris.test=iris[ind==2,]
tree=rpart(data=iris.training,Species~Sepal.Width+Sepal.Length+Petal.Length+Petal.Width,method="class",control=rpart.control(minsplit=10,minbucket=5),parms=list(split="information"))
rpart.plot(tree,main="Classification tree for the iris data (using 80% of data as training set)",extra=101)
rpart.plot(tree,main="Classification tree for the iris data (using 80% of data as training set)",extra=101)
library("rpart.plot")
library("randomForest")
tree=rpart(data=iris.training,Species~Sepal.Width+Sepal.Length+Petal.Length+Petal.Width,method="class",control=rpart.control(minsplit=10,minbucket=5),parms=list(split="information"))
rpart.plot(tree,main="Classification tree for the iris data (using 80% of data as training set)",extra=101)
